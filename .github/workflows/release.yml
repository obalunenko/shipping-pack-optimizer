name: Lint & Test & Build & Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - "!*"

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ 'ubuntu-24.04' ]
        go-version: [1.23.x]
    runs-on: ${{ matrix.os }}
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up go
        uses: actions/setup-go@v5.3.0
        with:
          go-version: ${{ matrix.go-version }}

      - run: |
          go version
        shell: bash

      - name: Build
        run: |
          make build

  regression_test:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ 'ubuntu-24.04' ]
        go-version: [1.23.x]
    runs-on: ${{ matrix.os }}
    name: Regression tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up go
        uses: actions/setup-go@v5.3.0
        with:
          go-version: ${{ matrix.go-version }}

      - run: |
          go version
        shell: bash

      - name: Run regression tests
        run: |
          make test
        shell: bash


  bake-images:
    name: Build and push
    runs-on: 'ubuntu-24.04'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/arm64,linux/amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker images
        uses: docker/bake-action@v6.3.0
        env:
          TAGS: ${{ steps.meta.outputs.bake-file-tags }}
          LABELS: ${{ steps.meta.outputs.bake-file-labels }}
          ANNOTATIONS: ${{ steps.meta.outputs.bake-file-annotations }}
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ env.TAGS }}
            cwd://${{ env.LABELS }}
            cwd://${{ env.ANNOTATIONS }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: true

  release:
    needs: [ build, regression_test ]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ 'ubuntu-24.04' ]
        go-version: [1.23.x]
    runs-on: ${{ matrix.os }}
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up go
        uses: actions/setup-go@v5.3.0
        with:
          go-version: ${{ matrix.go-version }}

      - run: |
          go version
        shell: bash

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: ~> v2
          install-only: true

      - name: Run GoReleaser
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make release
        shell: bash
