name: build-lint-docker-images

on:
  push:
    branches:
      - "master"
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - "*"
    paths:
      - "!**"
      - "build/docker/**"
      - "Dockerfile"
      - "!build/docker/**.sh"
      - ".github/workflows/dockerfiles.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-server

jobs:
  lint-dockerfiles:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        dockerfile:
          [
            "./Dockerfile",
          ]
    runs-on: "ubuntu-24.04"
    name: Lint ${{ matrix.dockerfile }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Lint
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          dockerfile: ${{ matrix.dockerfile }}
          annotate: true
          error_level: 2

  build-targets:
    runs-on: "ubuntu-24.04"
    needs: [ lint-dockerfiles ]
    name: Build docker image
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/arm64,linux/amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Build
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          make docker-build

      - name: Build and Push
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          make docker-build-push  
